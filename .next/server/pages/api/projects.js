"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/projects";
exports.ids = ["pages/api/projects"];
exports.modules = {

/***/ "(api)/./pages/api/projects.jsx":
/*!********************************!*\
  !*** ./pages/api/projects.jsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (async (req, res)=>{\n    const data = [\n        {\n            id: 1,\n            image: \"/assets/techs/sing.png\",\n            name: \"Singify 1st Place SLO-Hacks 2021\",\n            point1: \"• A ”finish the lyrics” game using Spotify, YouTube Transcript, and YouTube Search APIs, coupled with speech recognition and visual machine learning.\",\n            point2: \"• Learned how to input data into a jason file and extract data from a jason file.\",\n            point3: \"• Worked with Google’s teachable machine to differentate between right hand raise and left hand raises. Learned how to implement teh teachable machine algorithm into our program\",\n            link: \"https://devpost.com/software/singify\"\n        },\n        {\n            id: 2,\n            image: \"/assets/techs/bot.png\",\n            name: \"Covid Bot 2nd Place Cisco Hackathon\",\n            point1: \"• Worked on a team of three and created a python program that sends users by phone or email with open covid vaccine appointments.\",\n            point2: \"• Worked with google forms and sheets API to manipulate with user data input.\",\n            point3: \"• Worked on the chatbot that scanned user’s questions and looked for patterns within them. Based on the pattern the bot will answer the user’s covid question using a web scraper(Parse Hub).\",\n            link: \"https://devpost.com/software/covid-vaccine-bot\"\n        },\n        {\n            id: 4,\n            image: \"/assets/techs/whack.png\",\n            name: \"Whack A Note\",\n            point1: \"• Created a Whack the Mole like game with Bassy3 Board. The goal of the game is to flick on the switchs where the led blinks.\",\n            point2: \"• Each flick you hit correctly, you will gain a point and each point you get a note from a song. End Goal is to get 32 points before the 20 sec timer runs out.\",\n            point3: \"• Created using System Verilog, MCU, Muxs, Clock dividers, counters and etc.\",\n            link: \"https://docs.google.com/document/d/1aBFzRF0Ks7xMG3dGD6h3_Z0PLHMzVWmxl5w35YvOTCA/edit?usp=sharing\"\n        },\n        {\n            id: 5,\n            image: \"/assets/techs/wave_gen.png\",\n            name: \"Function Generator\",\n            point1: \"• Created a function generator with Nucleo-L476RG Board, DAC(MCP4901) and 4x4 Keypad. It has a percent error of .13% for frequecies and .1% for duty cycles\",\n            point2: \"• It can generate sine, square, triangle, and sawtooth waves. With Max frequencies 100Hz-500Hz.\",\n            point3: \"• Using the keypad it the user can change teh frequency, waveform and duty cycle of the waveforms.\",\n            link: \"https://docs.google.com/document/d/1Rfh0_Kf8kssjSrYkmTZTcqcP1A4cIhoVHbIVbq-M1Gw/edit?usp=sharing\"\n        },\n        {\n            id: 6,\n            image: \"/assets/techs/dragon_r.png\",\n            name: \"Dragon Rush\",\n            point1: \"• Started with a large java messy code-base. Learned how to read the codebase and refactored it using abstract class and interfaces.\",\n            point2: \"• After cleaning it up, Ichanged the theme to dragons for the game and implemented A* star algorithm for enemy tracking in the game\",\n            point3: \"• Reduced the codebase by 20%\",\n            link: \"https://github.com/Westluu/cpe-203_project1\"\n        },\n        {\n            id: 7,\n            image: \"/assets/techs/geo.png\",\n            name: \"Geoplacer\",\n            point1: \"• Inspired by r/place, where the canvas the Cal Poly SLO campus. User go to a tile based on the map and place a color.\",\n            point2: \"• The goal is to have the community work together to create art.\",\n            point3: \"• Learned to work with sockets to create a real-time world chat between other players and google maps API to track users location\",\n            link: \"https://devpost.com/software/geoplace\"\n        }\n    ];\n    res.status(200).json(data);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvcHJvamVjdHMuanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxPQUFPQSxHQUFHLEVBQUVDLEdBQUcsR0FBSztJQUNqQyxNQUFNQyxJQUFJLEdBQUc7UUFDWDtZQUNFQyxFQUFFLEVBQUUsQ0FBQztZQUNMQyxLQUFLLEVBQUUsd0JBQXdCO1lBQy9CQyxJQUFJLEVBQUUsa0NBQWtDO1lBQ3hDQyxNQUFNLEVBQUUsdUpBQXVKO1lBQy9KQyxNQUFNLEVBQUUsbUZBQW1GO1lBQzNGQyxNQUFNLEVBQUUsbUxBQW1MO1lBQzNMQyxJQUFJLEVBQUUsc0NBQXNDO1NBQzdDO1FBRUQ7WUFDRU4sRUFBRSxFQUFFLENBQUM7WUFDTEMsS0FBSyxFQUFFLHVCQUF1QjtZQUM5QkMsSUFBSSxFQUFFLHFDQUFxQztZQUMzQ0MsTUFBTSxFQUFFLG1JQUFtSTtZQUMzSUMsTUFBTSxFQUFFLCtFQUErRTtZQUN2RkMsTUFBTSxFQUFFLCtMQUErTDtZQUN2TUMsSUFBSSxFQUFFLGdEQUFnRDtTQUN2RDtRQUVEO1lBQ0VOLEVBQUUsRUFBRSxDQUFDO1lBQ0xDLEtBQUssRUFBRSx5QkFBeUI7WUFDaENDLElBQUksRUFBRSxjQUFjO1lBQ3BCQyxNQUFNLEVBQUUsK0hBQStIO1lBQ3ZJQyxNQUFNLEVBQUUsaUtBQWlLO1lBQ3pLQyxNQUFNLEVBQUUsOEVBQThFO1lBQ3RGQyxJQUFJLEVBQUUsa0dBQWtHO1NBQ3pHO1FBRUQ7WUFDRU4sRUFBRSxFQUFFLENBQUM7WUFDTEMsS0FBSyxFQUFFLDRCQUE0QjtZQUNuQ0MsSUFBSSxFQUFFLG9CQUFvQjtZQUMxQkMsTUFBTSxFQUFFLDZKQUE2SjtZQUNyS0MsTUFBTSxFQUFFLGlHQUFpRztZQUN6R0MsTUFBTSxFQUFFLG9HQUFvRztZQUM1R0MsSUFBSSxFQUFFLGtHQUFrRztTQUN6RztRQUVEO1lBQ0VOLEVBQUUsRUFBRSxDQUFDO1lBQ0xDLEtBQUssRUFBRSw0QkFBNEI7WUFDbkNDLElBQUksRUFBRSxhQUFhO1lBQ25CQyxNQUFNLEVBQUUsc0lBQXNJO1lBQzlJQyxNQUFNLEVBQUUscUlBQXFJO1lBQzdJQyxNQUFNLEVBQUUsK0JBQStCO1lBQ3ZDQyxJQUFJLEVBQUUsNkNBQTZDO1NBQ3BEO1FBRUQ7WUFDRU4sRUFBRSxFQUFFLENBQUM7WUFDTEMsS0FBSyxFQUFFLHVCQUF1QjtZQUM5QkMsSUFBSSxFQUFFLFdBQVc7WUFDakJDLE1BQU0sRUFBRSx3SEFBd0g7WUFDaElDLE1BQU0sRUFBRSxrRUFBa0U7WUFDMUVDLE1BQU0sRUFBRSxtSUFBbUk7WUFDM0lDLElBQUksRUFBRSx1Q0FBdUM7U0FDOUM7S0FDRjtJQUNEUixHQUFHLENBQUNTLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDVCxJQUFJLENBQUMsQ0FBQztBQUM3QixDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC8uL3BhZ2VzL2FwaS9wcm9qZWN0cy5qc3g/YzUzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZGF0YSA9IFtcbiAgICB7XG4gICAgICBpZDogMSxcbiAgICAgIGltYWdlOiBcIi9hc3NldHMvdGVjaHMvc2luZy5wbmdcIixcbiAgICAgIG5hbWU6IFwiU2luZ2lmeSAxc3QgUGxhY2UgU0xPLUhhY2tzIDIwMjFcIixcbiAgICAgIHBvaW50MTogXCLigKIgQSDigJ1maW5pc2ggdGhlIGx5cmljc+KAnSBnYW1lIHVzaW5nIFNwb3RpZnksIFlvdVR1YmUgVHJhbnNjcmlwdCwgYW5kIFlvdVR1YmUgU2VhcmNoIEFQSXMsIGNvdXBsZWQgd2l0aCBzcGVlY2ggcmVjb2duaXRpb24gYW5kIHZpc3VhbCBtYWNoaW5lIGxlYXJuaW5nLlwiLFxuICAgICAgcG9pbnQyOiBcIuKAoiBMZWFybmVkIGhvdyB0byBpbnB1dCBkYXRhIGludG8gYSBqYXNvbiBmaWxlIGFuZCBleHRyYWN0IGRhdGEgZnJvbSBhIGphc29uIGZpbGUuXCIsXG4gICAgICBwb2ludDM6IFwi4oCiIFdvcmtlZCB3aXRoIEdvb2dsZeKAmXMgdGVhY2hhYmxlIG1hY2hpbmUgdG8gZGlmZmVyZW50YXRlIGJldHdlZW4gcmlnaHQgaGFuZCByYWlzZSBhbmQgbGVmdCBoYW5kIHJhaXNlcy4gTGVhcm5lZCBob3cgdG8gaW1wbGVtZW50IHRlaCB0ZWFjaGFibGUgbWFjaGluZSBhbGdvcml0aG0gaW50byBvdXIgcHJvZ3JhbVwiLFxuICAgICAgbGluazogXCJodHRwczovL2RldnBvc3QuY29tL3NvZnR3YXJlL3NpbmdpZnlcIixcbiAgICB9LFxuXG4gICAge1xuICAgICAgaWQ6IDIsXG4gICAgICBpbWFnZTogXCIvYXNzZXRzL3RlY2hzL2JvdC5wbmdcIixcbiAgICAgIG5hbWU6IFwiQ292aWQgQm90IDJuZCBQbGFjZSBDaXNjbyBIYWNrYXRob25cIixcbiAgICAgIHBvaW50MTogXCLigKIgV29ya2VkIG9uIGEgdGVhbSBvZiB0aHJlZSBhbmQgY3JlYXRlZCBhIHB5dGhvbiBwcm9ncmFtIHRoYXQgc2VuZHMgdXNlcnMgYnkgcGhvbmUgb3IgZW1haWwgd2l0aCBvcGVuIGNvdmlkIHZhY2NpbmUgYXBwb2ludG1lbnRzLlwiLFxuICAgICAgcG9pbnQyOiBcIuKAoiBXb3JrZWQgd2l0aCBnb29nbGUgZm9ybXMgYW5kIHNoZWV0cyBBUEkgdG8gbWFuaXB1bGF0ZSB3aXRoIHVzZXIgZGF0YSBpbnB1dC5cIixcbiAgICAgIHBvaW50MzogXCLigKIgV29ya2VkIG9uIHRoZSBjaGF0Ym90IHRoYXQgc2Nhbm5lZCB1c2Vy4oCZcyBxdWVzdGlvbnMgYW5kIGxvb2tlZCBmb3IgcGF0dGVybnMgd2l0aGluIHRoZW0uIEJhc2VkIG9uIHRoZSBwYXR0ZXJuIHRoZSBib3Qgd2lsbCBhbnN3ZXIgdGhlIHVzZXLigJlzIGNvdmlkIHF1ZXN0aW9uIHVzaW5nIGEgd2ViIHNjcmFwZXIoUGFyc2UgSHViKS5cIixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9kZXZwb3N0LmNvbS9zb2Z0d2FyZS9jb3ZpZC12YWNjaW5lLWJvdFwiLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICBpZDogNCxcbiAgICAgIGltYWdlOiBcIi9hc3NldHMvdGVjaHMvd2hhY2sucG5nXCIsXG4gICAgICBuYW1lOiBcIldoYWNrIEEgTm90ZVwiLFxuICAgICAgcG9pbnQxOiBcIuKAoiBDcmVhdGVkIGEgV2hhY2sgdGhlIE1vbGUgbGlrZSBnYW1lIHdpdGggQmFzc3kzIEJvYXJkLiBUaGUgZ29hbCBvZiB0aGUgZ2FtZSBpcyB0byBmbGljayBvbiB0aGUgc3dpdGNocyB3aGVyZSB0aGUgbGVkIGJsaW5rcy5cIixcbiAgICAgIHBvaW50MjogXCLigKIgRWFjaCBmbGljayB5b3UgaGl0IGNvcnJlY3RseSwgeW91IHdpbGwgZ2FpbiBhIHBvaW50IGFuZCBlYWNoIHBvaW50IHlvdSBnZXQgYSBub3RlIGZyb20gYSBzb25nLiBFbmQgR29hbCBpcyB0byBnZXQgMzIgcG9pbnRzIGJlZm9yZSB0aGUgMjAgc2VjIHRpbWVyIHJ1bnMgb3V0LlwiLFxuICAgICAgcG9pbnQzOiBcIuKAoiBDcmVhdGVkIHVzaW5nIFN5c3RlbSBWZXJpbG9nLCBNQ1UsIE11eHMsIENsb2NrIGRpdmlkZXJzLCBjb3VudGVycyBhbmQgZXRjLlwiLFxuICAgICAgbGluazogXCJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzFhQkZ6UkYwS3M3eE1HM2RHRDZoM19aMFBMSE16VldteGw1dzM1WXZPVENBL2VkaXQ/dXNwPXNoYXJpbmdcIixcbiAgICB9LFxuXG4gICAge1xuICAgICAgaWQ6IDUsXG4gICAgICBpbWFnZTogXCIvYXNzZXRzL3RlY2hzL3dhdmVfZ2VuLnBuZ1wiLFxuICAgICAgbmFtZTogXCJGdW5jdGlvbiBHZW5lcmF0b3JcIixcbiAgICAgIHBvaW50MTogXCLigKIgQ3JlYXRlZCBhIGZ1bmN0aW9uIGdlbmVyYXRvciB3aXRoIE51Y2xlby1MNDc2UkcgQm9hcmQsIERBQyhNQ1A0OTAxKSBhbmQgNHg0IEtleXBhZC4gSXQgaGFzIGEgcGVyY2VudCBlcnJvciBvZiAuMTMlIGZvciBmcmVxdWVjaWVzIGFuZCAuMSUgZm9yIGR1dHkgY3ljbGVzXCIsXG4gICAgICBwb2ludDI6IFwi4oCiIEl0IGNhbiBnZW5lcmF0ZSBzaW5lLCBzcXVhcmUsIHRyaWFuZ2xlLCBhbmQgc2F3dG9vdGggd2F2ZXMuIFdpdGggTWF4IGZyZXF1ZW5jaWVzIDEwMEh6LTUwMEh6LlwiLFxuICAgICAgcG9pbnQzOiBcIuKAoiBVc2luZyB0aGUga2V5cGFkIGl0IHRoZSB1c2VyIGNhbiBjaGFuZ2UgdGVoIGZyZXF1ZW5jeSwgd2F2ZWZvcm0gYW5kIGR1dHkgY3ljbGUgb2YgdGhlIHdhdmVmb3Jtcy5cIixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xUmZoMF9LZjhrc3NqU3JZa21UWlRjcWNQMUE0Y0lob1ZIYklWYnEtTTFHdy9lZGl0P3VzcD1zaGFyaW5nXCIsXG4gICAgfSxcblxuICAgIHtcbiAgICAgIGlkOiA2LFxuICAgICAgaW1hZ2U6IFwiL2Fzc2V0cy90ZWNocy9kcmFnb25fci5wbmdcIixcbiAgICAgIG5hbWU6IFwiRHJhZ29uIFJ1c2hcIixcbiAgICAgIHBvaW50MTogXCLigKIgU3RhcnRlZCB3aXRoIGEgbGFyZ2UgamF2YSBtZXNzeSBjb2RlLWJhc2UuIExlYXJuZWQgaG93IHRvIHJlYWQgdGhlIGNvZGViYXNlIGFuZCByZWZhY3RvcmVkIGl0IHVzaW5nIGFic3RyYWN0IGNsYXNzIGFuZCBpbnRlcmZhY2VzLlwiLFxuICAgICAgcG9pbnQyOiBcIuKAoiBBZnRlciBjbGVhbmluZyBpdCB1cCwgSWNoYW5nZWQgdGhlIHRoZW1lIHRvIGRyYWdvbnMgZm9yIHRoZSBnYW1lIGFuZCBpbXBsZW1lbnRlZCBBKiBzdGFyIGFsZ29yaXRobSBmb3IgZW5lbXkgdHJhY2tpbmcgaW4gdGhlIGdhbWVcIixcbiAgICAgIHBvaW50MzogXCLigKIgUmVkdWNlZCB0aGUgY29kZWJhc2UgYnkgMjAlXCIsXG4gICAgICBsaW5rOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9XZXN0bHV1L2NwZS0yMDNfcHJvamVjdDFcIixcbiAgICB9LFxuXG4gICAge1xuICAgICAgaWQ6IDcsXG4gICAgICBpbWFnZTogXCIvYXNzZXRzL3RlY2hzL2dlby5wbmdcIixcbiAgICAgIG5hbWU6IFwiR2VvcGxhY2VyXCIsXG4gICAgICBwb2ludDE6IFwi4oCiIEluc3BpcmVkIGJ5IHIvcGxhY2UsIHdoZXJlIHRoZSBjYW52YXMgdGhlIENhbCBQb2x5IFNMTyBjYW1wdXMuIFVzZXIgZ28gdG8gYSB0aWxlIGJhc2VkIG9uIHRoZSBtYXAgYW5kIHBsYWNlIGEgY29sb3IuXCIsXG4gICAgICBwb2ludDI6IFwi4oCiIFRoZSBnb2FsIGlzIHRvIGhhdmUgdGhlIGNvbW11bml0eSB3b3JrIHRvZ2V0aGVyIHRvIGNyZWF0ZSBhcnQuXCIsXG4gICAgICBwb2ludDM6IFwi4oCiIExlYXJuZWQgdG8gd29yayB3aXRoIHNvY2tldHMgdG8gY3JlYXRlIGEgcmVhbC10aW1lIHdvcmxkIGNoYXQgYmV0d2VlbiBvdGhlciBwbGF5ZXJzIGFuZCBnb29nbGUgbWFwcyBBUEkgdG8gdHJhY2sgdXNlcnMgbG9jYXRpb25cIixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9kZXZwb3N0LmNvbS9zb2Z0d2FyZS9nZW9wbGFjZVwiLFxuICAgIH1cbiAgXTtcbiAgcmVzLnN0YXR1cygyMDApLmpzb24oZGF0YSk7XG59O1xuIl0sIm5hbWVzIjpbInJlcSIsInJlcyIsImRhdGEiLCJpZCIsImltYWdlIiwibmFtZSIsInBvaW50MSIsInBvaW50MiIsInBvaW50MyIsImxpbmsiLCJzdGF0dXMiLCJqc29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/projects.jsx\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/projects.jsx"));
module.exports = __webpack_exports__;

})();